//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/_project/Inputs/MainInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MainInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MainInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MainInput"",
    ""maps"": [
        {
            ""name"": ""Spirit Player Actions"",
            ""id"": ""9000933f-82ba-4105-bb44-b025c89dc051"",
            ""actions"": [
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""ca6653b8-92e2-447e-9c4f-4dcca77c6a3d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""757a995d-004f-4808-a216-916da4486eb2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""StableFloat"",
                    ""type"": ""Button"",
                    ""id"": ""f3801d69-8837-4554-9b40-85cb4ad0c0db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MinorPower"",
                    ""type"": ""Button"",
                    ""id"": ""c9037991-a3d4-41e5-8598-2a11577ec506"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Manifest"",
                    ""type"": ""Button"",
                    ""id"": ""8a589837-6f63-405c-80d8-7d13f70487ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveUpDown"",
                    ""type"": ""Button"",
                    ""id"": ""4c732d87-bf70-4114-ac27-106e697e3b85"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveRightLeft"",
                    ""type"": ""Button"",
                    ""id"": ""3ee309d0-95fc-40cf-b32d-df489066c72e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e63b3052-c1c4-4e17-9854-2271f5a6f499"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b304e359-c593-4122-8f3f-e321303835a8"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d999b2b4-4cb1-4396-9f9e-d8ab999cf194"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e17d3470-2f98-42f9-a855-a7f5a8a8be7e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e491ddca-3aeb-4dac-bb34-eb3f12cd9af3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""37fe946f-a402-49e5-819c-3506db6e2a7d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""304831de-d566-4cbb-8388-4252fa6994c3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""6bc83ad0-c6ba-4ea4-a2ad-d45d25195a6e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""79f6598c-a49a-4667-90c5-7fbf920edd5e"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone(min=0.2)"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ca2ba7bb-27ef-4b4c-83d0-ba4f3c6cb962"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone(min=0.2)"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3e7b5135-36f5-44e0-8f67-d89ec4cf5af6"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone(min=0.2)"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f6c519df-c721-4957-95f4-455069cfc4f3"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone(min=0.2)"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""770fa1ca-5984-4159-8f4b-8e32e9d674d7"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StableFloat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c723235-62f4-4be1-9462-fd9ff437e2d2"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StableFloat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2b8f0ff-bd1c-47c7-94d4-b0d70ded01ae"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MinorPower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53f386a4-cefc-421a-881a-5db06b5dcac2"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MinorPower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ec49a2c-f649-445e-9cc4-ceb32f5953bd"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Manifest"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9380f169-b8ee-4338-8cc2-0a3d48642ac2"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Manifest"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""0d4f4fe5-238d-4b6a-b774-6953203ad133"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveUpDown"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""bd2a32c4-e369-4f45-bd98-bb4ee81ab126"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""MoveUpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b3a7a088-75c7-4780-9c36-dc48c3f5df61"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""MoveUpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""63c2a831-fc42-4faf-abc8-2e2582837d84"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveUpDown"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a905793f-3fed-48e8-b6d7-472c3a705597"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveUpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""52d1bc60-861c-40b2-b542-2959375af470"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveUpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""79ff8100-624e-46cf-9943-59ebc9eeadea"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveRightLeft"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a78041c8-57db-4d9c-bd61-88c1b077d4c2"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""MoveRightLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""9ed1c016-100e-46fe-9b48-abb720f466e3"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""MoveRightLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""74cce14f-79d6-4429-8522-2a267279b3e8"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveRightLeft"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""1e723d7b-d288-4338-94db-9644cb830864"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveRightLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""79c67c94-32a4-4f5b-968e-282fd29c5068"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveRightLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Spirit Player Actions
        m_SpiritPlayerActions = asset.FindActionMap("Spirit Player Actions", throwIfNotFound: true);
        m_SpiritPlayerActions_Escape = m_SpiritPlayerActions.FindAction("Escape", throwIfNotFound: true);
        m_SpiritPlayerActions_Move = m_SpiritPlayerActions.FindAction("Move", throwIfNotFound: true);
        m_SpiritPlayerActions_StableFloat = m_SpiritPlayerActions.FindAction("StableFloat", throwIfNotFound: true);
        m_SpiritPlayerActions_MinorPower = m_SpiritPlayerActions.FindAction("MinorPower", throwIfNotFound: true);
        m_SpiritPlayerActions_Manifest = m_SpiritPlayerActions.FindAction("Manifest", throwIfNotFound: true);
        m_SpiritPlayerActions_MoveUpDown = m_SpiritPlayerActions.FindAction("MoveUpDown", throwIfNotFound: true);
        m_SpiritPlayerActions_MoveRightLeft = m_SpiritPlayerActions.FindAction("MoveRightLeft", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Spirit Player Actions
    private readonly InputActionMap m_SpiritPlayerActions;
    private List<ISpiritPlayerActionsActions> m_SpiritPlayerActionsActionsCallbackInterfaces = new List<ISpiritPlayerActionsActions>();
    private readonly InputAction m_SpiritPlayerActions_Escape;
    private readonly InputAction m_SpiritPlayerActions_Move;
    private readonly InputAction m_SpiritPlayerActions_StableFloat;
    private readonly InputAction m_SpiritPlayerActions_MinorPower;
    private readonly InputAction m_SpiritPlayerActions_Manifest;
    private readonly InputAction m_SpiritPlayerActions_MoveUpDown;
    private readonly InputAction m_SpiritPlayerActions_MoveRightLeft;
    public struct SpiritPlayerActionsActions
    {
        private @MainInput m_Wrapper;
        public SpiritPlayerActionsActions(@MainInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Escape => m_Wrapper.m_SpiritPlayerActions_Escape;
        public InputAction @Move => m_Wrapper.m_SpiritPlayerActions_Move;
        public InputAction @StableFloat => m_Wrapper.m_SpiritPlayerActions_StableFloat;
        public InputAction @MinorPower => m_Wrapper.m_SpiritPlayerActions_MinorPower;
        public InputAction @Manifest => m_Wrapper.m_SpiritPlayerActions_Manifest;
        public InputAction @MoveUpDown => m_Wrapper.m_SpiritPlayerActions_MoveUpDown;
        public InputAction @MoveRightLeft => m_Wrapper.m_SpiritPlayerActions_MoveRightLeft;
        public InputActionMap Get() { return m_Wrapper.m_SpiritPlayerActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SpiritPlayerActionsActions set) { return set.Get(); }
        public void AddCallbacks(ISpiritPlayerActionsActions instance)
        {
            if (instance == null || m_Wrapper.m_SpiritPlayerActionsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SpiritPlayerActionsActionsCallbackInterfaces.Add(instance);
            @Escape.started += instance.OnEscape;
            @Escape.performed += instance.OnEscape;
            @Escape.canceled += instance.OnEscape;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @StableFloat.started += instance.OnStableFloat;
            @StableFloat.performed += instance.OnStableFloat;
            @StableFloat.canceled += instance.OnStableFloat;
            @MinorPower.started += instance.OnMinorPower;
            @MinorPower.performed += instance.OnMinorPower;
            @MinorPower.canceled += instance.OnMinorPower;
            @Manifest.started += instance.OnManifest;
            @Manifest.performed += instance.OnManifest;
            @Manifest.canceled += instance.OnManifest;
            @MoveUpDown.started += instance.OnMoveUpDown;
            @MoveUpDown.performed += instance.OnMoveUpDown;
            @MoveUpDown.canceled += instance.OnMoveUpDown;
            @MoveRightLeft.started += instance.OnMoveRightLeft;
            @MoveRightLeft.performed += instance.OnMoveRightLeft;
            @MoveRightLeft.canceled += instance.OnMoveRightLeft;
        }

        private void UnregisterCallbacks(ISpiritPlayerActionsActions instance)
        {
            @Escape.started -= instance.OnEscape;
            @Escape.performed -= instance.OnEscape;
            @Escape.canceled -= instance.OnEscape;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @StableFloat.started -= instance.OnStableFloat;
            @StableFloat.performed -= instance.OnStableFloat;
            @StableFloat.canceled -= instance.OnStableFloat;
            @MinorPower.started -= instance.OnMinorPower;
            @MinorPower.performed -= instance.OnMinorPower;
            @MinorPower.canceled -= instance.OnMinorPower;
            @Manifest.started -= instance.OnManifest;
            @Manifest.performed -= instance.OnManifest;
            @Manifest.canceled -= instance.OnManifest;
            @MoveUpDown.started -= instance.OnMoveUpDown;
            @MoveUpDown.performed -= instance.OnMoveUpDown;
            @MoveUpDown.canceled -= instance.OnMoveUpDown;
            @MoveRightLeft.started -= instance.OnMoveRightLeft;
            @MoveRightLeft.performed -= instance.OnMoveRightLeft;
            @MoveRightLeft.canceled -= instance.OnMoveRightLeft;
        }

        public void RemoveCallbacks(ISpiritPlayerActionsActions instance)
        {
            if (m_Wrapper.m_SpiritPlayerActionsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISpiritPlayerActionsActions instance)
        {
            foreach (var item in m_Wrapper.m_SpiritPlayerActionsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SpiritPlayerActionsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SpiritPlayerActionsActions @SpiritPlayerActions => new SpiritPlayerActionsActions(this);
    public interface ISpiritPlayerActionsActions
    {
        void OnEscape(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnStableFloat(InputAction.CallbackContext context);
        void OnMinorPower(InputAction.CallbackContext context);
        void OnManifest(InputAction.CallbackContext context);
        void OnMoveUpDown(InputAction.CallbackContext context);
        void OnMoveRightLeft(InputAction.CallbackContext context);
    }
}
